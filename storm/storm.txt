storm（实时分析）:
topology：拓扑（agent）
Spout：喷头（source 流式数据）spout 不写业务逻辑，负责转换、发送数据
bolt：阀门（相当于Chanel bolt自定义，数据清洗，串联，agent串联）数据运算，业务处理 可以接收多个spout发送的数据流，从而可以组建出复杂的网络
tuple（数据承载，类似map，复杂的数据结构 

集群配置：
storm.zookeeper.servers:
    - "hadoop01"
    - "hadoop02"
    - "hadoop03"

nimbus.host: "hadoop01"
storm.local.dir: "/usr/local/src/storm/apache-storm-0.9.3/tmp"


export STORM_HOME=/usr/local/src/storm/apache-storm-0.9.3
export PATH=$STORM_HOME:$PATH
source /etc/profile

拷贝到其他节点：
scp -r storm root@hadoop02:/usr/local/src/
scp -r storm root@hadoop03:/usr/local/src/

集群启动：

主：hadoop01进入bin目录： cd /usr/local/src/storm/apache-storm-0.9.3/bin/
core进程
./storm ui >/dev/null 2>&1 &
./storm nimbus >/dev/null 2>&1 &

从节点02和03：
cd  /usr/local/src/storm/apache-storm-0.9.3/bin/
./storm supervisor >/dev/null 2>&1 &
可以访问：
http://hadoop01:8080/index.html




Trident：
原生api通过bolt串接，trident通过多个function和多个filter

kafka 将数据传到storm之后，trident方式利用stream.each()方法吧kafka中的数据封装tuple(str,string)获取它所有的属性

clearbolt清洗 去除无用的数据  分装字段 成新的tuple，传递个下一个bolt
Config config=new Config();

Strom并发机制：

（1）Nodes（服务器）：是指配置在一个Storm集群中的服务器，会执行topology的一部分运算。一个Storm集群可以包括一个或者多个工作node。

（2）Workers（JVM虚拟机）：是指一个node节点服务器上相互独立运行的JVM进程。每一个node可以配置运行一个或者多个worker。一个topology会分配到一个或者多个worker上运行。

（3）Executor(线程)：是指一个worker的JVM进程中运行的Java线程。多个task可以指派给同一个executor来执行。除非是明确指定，Storm默认会给每一个executor分配一个task。

（4）Task(bolt/spout实例)：task是spout和bolt的实例，衙门的nextTuple()和execute()方法会被executors线程调用执行。

随机分发：shuffleGrouping：

word字段具有相同值的会被路由到到同一个bolt的task中： fieldsGrouping("sentence_Bolt", new Fields("word"));底层用的hash分桶实现的

.globalGrouping("WordCount_Bolt");


　Stream Grouping定义了一个流在Bolt任务间该如何被切分。这里有Storm提供的6个Stream Grouping类型：

　　1. 随机分组(Shuffle grouping)：随机分发tuple到Bolt的任务，保证每个任务获得相等数量的tuple。

　　2. 字段分组(Fields grouping)：根据指定字段分割数据流，并分组。例如，根据“user-id”字段，相同“user-id”的元组总是分发到同一个任务，不同“user-id”的元组可能分发到不同的任务。

　　3. 全部分组(All grouping)：tuple被复制到bolt的所有任务。这种类型需要谨慎使用。

　　4. 全局分组(Global grouping)：全部流都分配到bolt的同一个任务。明确地说，是分配给ID最小的那个task。

　　5. 无分组(None grouping)：你不需要关心流是如何分组。目前，无分组等效于随机分组。但最终，Storm将把无分组的Bolts放到Bolts或Spouts订阅它们的同一线程去执行(如果可能)。

　　6. 直接分组(Direct grouping)：这是一个特别的分组类型。元组生产者决定tuple由哪个元组处理者任务接收。

　　当然还可以实现CustomStreamGroupimg接口来定制自己需要的分组。


